<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>helm on 我的空间</title><link>https://mkbooks.github.io/blog/categories/helm/</link><description>Recent content in helm on 我的空间</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 Jan 2023 14:30:00 +0800</lastBuildDate><atom:link href="https://mkbooks.github.io/blog/categories/helm/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 helm 遇到的问题</title><link>https://mkbooks.github.io/blog/p/%E4%BD%BF%E7%94%A8-helm-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 31 Jan 2023 14:30:00 +0800</pubDate><guid>https://mkbooks.github.io/blog/p/%E4%BD%BF%E7%94%A8-helm-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>&lt;ul>
&lt;li>版本
&lt;ul>
&lt;li>helm version
&lt;ul>
&lt;li>&lt;code>version.BuildInfo{Version:&amp;quot;v3.7.0&amp;quot;, GitCommit:&amp;quot;eeac83883cb4014fe60267ec6373570374ce770b&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, GoVersion:&amp;quot;go1.16.8&amp;quot;}&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="问题-1">问题 1&lt;/h1>
&lt;h2 id="操作">操作&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">helm repo add bitnami https://charts.bitnami.com/bitnami
helm search repo bitnami | grep mysql
helm repo update
helm install bitnami/mysql --generate-name
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="报错">报错&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Error: INSTALLATION FAILED: Kubernetes cluster unreachable: Get &amp;#34;http://localhost:8080/version?timeout=32s&amp;#34;: dial tcp 127.0.0.1:8080: connect: connection refused
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="解决">解决&lt;/h2>
&lt;blockquote>
&lt;p>手动配置 KUBECONFIG 环境变量&lt;/p>
&lt;/blockquote>
&lt;p>临时解决: &lt;code>export KUBECONFIG=/etc/rancher/k3s/k3s.yaml&lt;/code>&lt;/p>
&lt;p>永久解决:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">vim ~/.bashrc
# 写入内容: export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
source ~/.bashrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原理">原理&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">helm v3 版本不再需要 Tiller，而是直接访问 ApiServer 来与 k8s 交互，通过环境变量 KUBECONFIG 来读取存有 ApiServre 的地址与 token 的配置文件地址，默认地址为 ~/.kube/config
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>helm 教程</title><link>https://mkbooks.github.io/blog/p/helm-%E6%95%99%E7%A8%8B/</link><pubDate>Tue, 31 Jan 2023 14:20:00 +0800</pubDate><guid>https://mkbooks.github.io/blog/p/helm-%E6%95%99%E7%A8%8B/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://helm.sh/" target="_blank" rel="noopener"
>helm docs 官网&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://helm.sh/zh/docs/" target="_blank" rel="noopener"
>helm docs 中文文档&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>版本&lt;/p>
&lt;ul>
&lt;li>helm version
&lt;ul>
&lt;li>&lt;code>version.BuildInfo{Version:&amp;quot;v3.7.0&amp;quot;, GitCommit:&amp;quot;eeac83883cb4014fe60267ec6373570374ce770b&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, GoVersion:&amp;quot;go1.16.8&amp;quot;}&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="基础操作">基础操作&lt;/h2>
&lt;h3 id="仓库">仓库&lt;/h3>
&lt;ul>
&lt;li>查看配置的仓库：&lt;code>helm repo list&lt;/code>&lt;/li>
&lt;li>添加新的仓库：&lt;code>helm repo add&lt;/code>
&lt;ul>
&lt;li>&lt;code>helm repo add brigade https://brigadecore.github.io/charts&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>更新仓库：&lt;code>helm repo update&lt;/code>&lt;/li>
&lt;li>移除仓库: &lt;code>helm repo remove&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="charts">Charts&lt;/h3>
&lt;ul>
&lt;li>查找可用的charts：&lt;code>helm search hub&lt;/code>
&lt;ul>
&lt;li>&lt;code>helm search hub wordpress&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>从添加的仓库中查找可用的charts: &lt;code>helm search repo brigade&lt;/code>
&lt;ul>
&lt;li>搜索使用模糊字符串匹配算法: &lt;code>helm search repo bri&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="安装一个-helm-包">安装一个 helm 包&lt;/h3>
&lt;ul>
&lt;li>使用 &lt;code>helm install&lt;/code> 命令来安装一个新的 helm 包。最简单的使用方法只需要传入两个参数：你命名的release名字和你想安装的chart的名称。（如果想让Helm生成一个名称，删除发布名称并使用&amp;ndash;generate-name。）
&lt;ul>
&lt;li>&lt;code>helm install happy-panda bitnami/wordpress&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用 helm status 来追踪 release 的状态，或是重新读取配置信息：
&lt;ul>
&lt;li>&lt;code>helm status happy-panda&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="自定义-chart">自定义 chart&lt;/h4>
&lt;ul>
&lt;li>使用 helm show values 可以查看 chart 中的可配置选项：&lt;code>helm show values bitnami/wordpress&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>使用 YAML 格式的文件覆盖上述任意配置项，并在安装过程中使用该文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ echo &amp;#39;{mariadb.auth.database: user0db, mariadb.auth.username: user0}&amp;#39; &amp;gt; values.yaml
$ helm install -f values.yaml bitnami/wordpress --generate-name
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装过程中有两种方式传递配置数据：&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;values (或 -f)：使用 YAML 文件覆盖配置。可以指定多次，优先使用最右边的文件。&lt;/li>
&lt;li>&amp;ndash;set：通过命令行的方式对指定项进行覆盖。&lt;/li>
&lt;/ul>
&lt;h4 id="升级-release">升级 release&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">helm upgrade -f panda.yaml happy-panda bitnami/wordpress
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="失败时恢复">失败时恢复&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">helm rollback happy-panda 1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="查看配置值">查看配置值&lt;/h4>
&lt;p>&lt;code>helm get values happy-panda&lt;/code>&lt;/p>
&lt;h4 id="卸载-release">卸载 release&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">helm uninstall happy-panda
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>展示 Helm 保留的所有 release 记录，包括失败或删除的条目（指定了 &amp;ndash;keep-history）：&lt;code>helm list --all&lt;/code>&lt;/p></description></item></channel></rss>