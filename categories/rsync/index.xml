<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rsync on 我的空间</title><link>https://mkbooks.github.io/blog/categories/rsync/</link><description>Recent content in rsync on 我的空间</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Aug 2022 17:03:18 +0800</lastBuildDate><atom:link href="https://mkbooks.github.io/blog/categories/rsync/index.xml" rel="self" type="application/rss+xml"/><item><title>远程传输文件-rsync</title><link>https://mkbooks.github.io/blog/p/%E8%BF%9C%E7%A8%8B%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6-rsync/</link><pubDate>Fri, 19 Aug 2022 17:03:18 +0800</pubDate><guid>https://mkbooks.github.io/blog/p/%E8%BF%9C%E7%A8%8B%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6-rsync/</guid><description>&lt;p>参考链接&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.ruanyifeng.com/blog/2020/08/rsync.html" target="_blank" rel="noopener"
>https://www.ruanyifeng.com/blog/2020/08/rsync.html&lt;/a>&lt;/li>
&lt;li>How To Use Rsync to Sync Local and Remote Directories on a VPS, Justin Ellingwood&lt;/li>
&lt;li>Mirror Your Web Site With rsync, Falko Timme&lt;/li>
&lt;li>Examples on how to use Rsync, Egidio Docile&lt;/li>
&lt;li>How to create incremental backups using rsync on Linux, Egidio Docile&lt;/li>
&lt;/ul>
&lt;h1 id="一简介">一、简介&lt;/h1>
&lt;p>rsync 是一个常用的 Linux 应用程序，用于文件同步。&lt;/p>
&lt;p>它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代cp和mv命令。&lt;/p>
&lt;p>它名称里面的r指的是 remote，rsync 其实就是&amp;quot;远程同步&amp;quot;（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。&lt;/p>
&lt;h1 id="二安装">二、安装&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"># Ubuntu/Debian
$ sudo apt-get install rsync
# CentOS/Red Hat
$ sudo yum install rsync
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，传输的双方都必须安装 rsync。&lt;/p>
&lt;h2 id="三基本用法">三、基本用法&lt;/h2>
&lt;h2 id="31--r-参数">3.1 -r 参数&lt;/h2>
&lt;p>本机使用 rsync 命令时，可以作为cp和mv命令的替代方法，将源目录同步到目标目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -r source destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，-r表示递归，即包含子目录。注意，-r是必须的，否则 rsync 运行不会成功。source目录表示源目录，destination表示目标目录。&lt;/p>
&lt;p>如果有多个文件或目录需要同步，可以写成下面这样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -r source1 source2 destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，source1、source2都会被同步到destination目录。&lt;/p>
&lt;h2 id="32--a-参数">3.2 -a 参数&lt;/h2>
&lt;p>-a参数可以替代-r，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以-a比-r更有用。下面的用法才是常见的写法。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -a source destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>目标目录destination如果不存在，rsync 会自动创建。执行上面的命令后，源目录source被完整地复制到了目标目录destination下面，即形成了destination/source的目录结构。&lt;/p>
&lt;p>如果只想同步源目录source里面的内容到目标目录destination，则需要在源目录后面加上斜杠。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -a source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令执行后，source目录里面的内容，就都被复制到了destination目录里面，并不会在destination下面创建一个source子目录。&lt;/p>
&lt;h2 id="33--n-参数">3.3 -n 参数&lt;/h2>
&lt;p>如果不确定 rsync 执行后会产生什么结果，可以先用-n或&amp;ndash;dry-run参数模拟执行的结果。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -anv source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，-n参数模拟命令执行的结果，并不真的执行命令。-v参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。&lt;/p>
&lt;h2 id="34---delete-参数">3.4 &amp;ndash;delete 参数&lt;/h2>
&lt;p>默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用&amp;ndash;delete参数，这将删除只存在于目标目录、不存在于源目录的文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --delete source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，&amp;ndash;delete参数会使得destination成为source的一个镜像。&lt;/p>
&lt;h1 id="四排除文件">四、排除文件&lt;/h1>
&lt;h2 id="41---exclude-参数">4.1 &amp;ndash;exclude 参数&lt;/h2>
&lt;p>有时，我们希望同步时排除某些文件或目录，这时可以用&amp;ndash;exclude参数指定排除模式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --exclude=&amp;#39;*.txt&amp;#39; source/ destination
# 或者
$ rsync -av --exclude &amp;#39;*.txt&amp;#39; source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令排除了所有 TXT 文件。&lt;/p>
&lt;p>注意，rsync 会同步以&amp;quot;点&amp;quot;开头的隐藏文件，如果要排除隐藏文件，可以这样写&amp;ndash;exclude=&amp;quot;.*&amp;quot;。&lt;/p>
&lt;p>如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成下面这样。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --exclude &amp;#39;dir1/*&amp;#39; source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>多个排除模式，可以用多个&amp;ndash;exclude参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --exclude &amp;#39;file1.txt&amp;#39; --exclude &amp;#39;dir1/*&amp;#39; source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个&amp;ndash;exclude参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --exclude={&amp;#39;file1.txt&amp;#39;,&amp;#39;dir1/*&amp;#39;} source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用&amp;ndash;exclude-from参数指定这个文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --exclude-from=&amp;#39;exclude-file.txt&amp;#39; source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="42---include-参数">4.2 &amp;ndash;include 参数&lt;/h2>
&lt;p>&amp;ndash;include参数用来指定必须同步的文件模式，往往与&amp;ndash;exclude结合使用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av --include=&amp;#34;*.txt&amp;#34; --exclude=&amp;#39;*&amp;#39; source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。&lt;/p>
&lt;h1 id="五远程同步">五、远程同步&lt;/h1>
&lt;h2 id="51-ssh-协议">5.1 SSH 协议&lt;/h2>
&lt;p>rsync 除了支持本地两个目录之间的同步，也支持远程同步。它可以将本地内容，同步到远程服务器。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av source/ username@remote_host:destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以将远程内容同步到本地。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av username@remote_host:source/ destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>rsync 默认使用 SSH 进行远程登录和数据传输。&lt;/p>
&lt;p>由于早期 rsync 不使用 SSH 协议，需要用-e参数指定协议，后来才改的。所以，下面-e ssh可以省略。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av -e ssh source/ user@remote_host:/destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是，如果 ssh 命令有附加的参数，则必须使用-e参数指定所要执行的 SSH 命令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av -e &amp;#39;ssh -p 2234&amp;#39; source/ user@remote_host:/destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，-e参数指定 SSH 使用2234端口。&lt;/p>
&lt;h2 id="52-rsync-协议">5.2 rsync 协议&lt;/h2>
&lt;p>除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用rsync://协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔::。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av source/ 192.168.122.32::module/destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，上面地址中的module并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。&lt;/p>
&lt;p>如果想知道 rsync 守护程序分配的所有 module 列表，可以执行下面命令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync rsync://192.168.122.32
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>rsync 协议除了使用双冒号，也可以直接用rsync://协议指定地址。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -av source/ rsync://192.168.122.32/module/destination
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="六增量备份">六、增量备份&lt;/h1>
&lt;p>rsync 的最大特点就是它可以完成增量备份，也就是默认只复制有变动的文件。&lt;/p>
&lt;p>除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。&lt;/p>
&lt;p>具体做法是，第一次同步是全量备份，所有文件在基准目录里面同步一份。以后每一次同步都是增量备份，只同步源目录与基准目录之间有变动的部分，将这部分保存在一个新的目标目录。这个新的目标目录之中，也是包含所有文件，但实际上，只有那些变动过的文件是存在于该目录，其他没有变动的文件都是指向基准目录文件的硬链接。&lt;/p>
&lt;p>&amp;ndash;link-dest参数用来指定同步时的基准目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ rsync -a --delete --link-dest /compare/path /source/path /target/path
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面命令中，&amp;ndash;link-dest参数指定基准目录/compare/path，然后源目录/source/path跟基准目录进行比较，找出变动的文件，将它们拷贝到目标目录/target/path。那些没变动的文件则会生成硬链接。这个命令的第一次备份时是全量备份，后面就都是增量备份了。&lt;/p>
&lt;p>下面是一个脚本示例，备份用户的主目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1"># A script to perform incremental backups using rsync&lt;/span>
&lt;span class="nb">set&lt;/span> -o errexit
&lt;span class="nb">set&lt;/span> -o nounset
&lt;span class="nb">set&lt;/span> -o pipefail
&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">SOURCE_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">HOME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">BACKUP_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/mnt/data/backups&amp;#34;&lt;/span>
&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">DATETIME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>date &lt;span class="s1">&amp;#39;+%Y-%m-%d_%H:%M:%S&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">BACKUP_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BACKUP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DATETIME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">LATEST_LINK&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BACKUP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest&amp;#34;&lt;/span>
mkdir -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BACKUP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
rsync -av --delete &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SOURCE_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --link-dest &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LATEST_LINK&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --exclude&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.cache&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BACKUP_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
rm -rf &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LATEST_LINK&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
ln -s &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BACKUP_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LATEST_LINK&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面脚本中，每一次同步都会生成一个新目录${BACKUP_DIR}/${DATETIME}，并将软链接${BACKUP_DIR}/latest指向这个目录。下一次备份时，就将${BACKUP_DIR}/latest作为基准目录，生成新的备份目录。最后，再将软链接${BACKUP_DIR}/latest指向新的备份目录。&lt;/p>
&lt;h1 id="七配置项">七、配置项&lt;/h1>
&lt;p>-a、&amp;ndash;archive参数表示存档模式，保存所有的元数据，比如修改时间（modification time）、权限、所有者等，并且软链接也会同步过去。&lt;/p>
&lt;p>&amp;ndash;append参数指定文件接着上次中断的地方，继续传输。&lt;/p>
&lt;p>&amp;ndash;append-verify参数跟&amp;ndash;append参数类似，但会对传输完成后的文件进行一次校验。如果校验失败，将重新发送整个文件。&lt;/p>
&lt;p>-b、&amp;ndash;backup参数指定在删除或更新目标目录已经存在的文件时，将该文件更名后进行备份，默认行为是删除。更名规则是添加由&amp;ndash;suffix参数指定的文件后缀名，默认是~。&lt;/p>
&lt;p>&amp;ndash;backup-dir参数指定文件备份时存放的目录，比如&amp;ndash;backup-dir=/path/to/backups。&lt;/p>
&lt;p>&amp;ndash;bwlimit参数指定带宽限制，默认单位是 KB/s，比如&amp;ndash;bwlimit=100。&lt;/p>
&lt;p>-c、&amp;ndash;checksum参数改变rsync的校验方式。默认情况下，rsync 只检查文件的大小和最后修改日期是否发生变化，如果发生变化，就重新传输；使用这个参数以后，则通过判断文件内容的校验和，决定是否重新传输。&lt;/p>
&lt;p>&amp;ndash;delete参数删除只存在于目标目录、不存在于源目标的文件，即保证目标目录是源目标的镜像。&lt;/p>
&lt;p>-e参数指定使用 SSH 协议传输数据。&lt;/p>
&lt;p>&amp;ndash;exclude参数指定排除不进行同步的文件，比如&amp;ndash;exclude=&amp;quot;*.iso&amp;quot;。&lt;/p>
&lt;p>&amp;ndash;exclude-from参数指定一个本地文件，里面是需要排除的文件模式，每个模式一行。&lt;/p>
&lt;p>&amp;ndash;existing、&amp;ndash;ignore-non-existing参数表示不同步目标目录中不存在的文件和目录。&lt;/p>
&lt;p>-h参数表示以人类可读的格式输出。&lt;/p>
&lt;p>-h、&amp;ndash;help参数返回帮助信息。&lt;/p>
&lt;p>-i参数表示输出源目录与目标目录之间文件差异的详细情况。&lt;/p>
&lt;p>&amp;ndash;ignore-existing参数表示只要该文件在目标目录中已经存在，就跳过去，不再同步这些文件。&lt;/p>
&lt;p>&amp;ndash;include参数指定同步时要包括的文件，一般与&amp;ndash;exclude结合使用。&lt;/p>
&lt;p>&amp;ndash;link-dest参数指定增量备份的基准目录。&lt;/p>
&lt;p>-m参数指定不同步空目录。&lt;/p>
&lt;p>&amp;ndash;max-size参数设置传输的最大文件的大小限制，比如不超过200KB（&amp;ndash;max-size=&amp;lsquo;200k&amp;rsquo;）。&lt;/p>
&lt;p>&amp;ndash;min-size参数设置传输的最小文件的大小限制，比如不小于10KB（&amp;ndash;min-size=10k）。&lt;/p>
&lt;p>-n参数或&amp;ndash;dry-run参数模拟将要执行的操作，而并不真的执行。配合-v参数使用，可以看到哪些内容会被同步过去。&lt;/p>
&lt;p>-P参数是&amp;ndash;progress和&amp;ndash;partial这两个参数的结合。&lt;/p>
&lt;p>&amp;ndash;partial参数允许恢复中断的传输。不使用该参数时，rsync会删除传输到一半被打断的文件；使用该参数后，传输到一半的文件也会同步到目标目录，下次同步时再恢复中断的传输。一般需要与&amp;ndash;append或&amp;ndash;append-verify配合使用。&lt;/p>
&lt;p>&amp;ndash;partial-dir参数指定将传输到一半的文件保存到一个临时目录，比如&amp;ndash;partial-dir=.rsync-partial。一般需要与&amp;ndash;append或&amp;ndash;append-verify配合使用。&lt;/p>
&lt;p>&amp;ndash;progress参数表示显示进展。&lt;/p>
&lt;p>-r参数表示递归，即包含子目录。&lt;/p>
&lt;p>&amp;ndash;remove-source-files参数表示传输成功后，删除发送方的文件。&lt;/p>
&lt;p>&amp;ndash;size-only参数表示只同步大小有变化的文件，不考虑文件修改时间的差异。&lt;/p>
&lt;p>&amp;ndash;suffix参数指定文件名备份时，对文件名添加的后缀，默认是~。&lt;/p>
&lt;p>-u、&amp;ndash;update参数表示同步时跳过目标目录中修改时间更新的文件，即不同步这些有更新的时间戳的文件。&lt;/p>
&lt;p>-v参数表示输出细节。-vv表示输出更详细的信息，-vvv表示输出最详细的信息。&lt;/p>
&lt;p>&amp;ndash;version参数返回 rsync 的版本。&lt;/p>
&lt;p>-z参数指定同步时压缩数据。&lt;/p></description></item></channel></rss>